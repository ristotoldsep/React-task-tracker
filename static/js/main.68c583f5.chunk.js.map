{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","textAlign","href","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c583f5.chunk.js","sourcesContent":["// import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/* Used in Header component */\r\nconst Button = ({ color, text, onClick }) => {\r\n\r\n    return (\r\n        <button \r\n            onClick={ onClick } \r\n            style={{backgroundColor: color}} \r\n            className='btn'\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'blue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","// WE DON'T NEED TO IMPORT REACT ANYMORE FOR EVERY COMPONENT!\r\nimport PropTypes from 'prop-types'\r\nimport Button from \"./Button\";\r\nimport { useLocation } from 'react-router-dom'; //To remove the Open button on about page\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button \r\n                onClick={ onAdd } \r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close': 'Open'} \r\n            />} \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n/* const headingStyle = {\r\n    color: 'red',\r\n    backgroundColor: 'yellow'\r\n} */\r\n\r\n\r\nexport default Header\r\n\r\n","import { Link } from 'react-router-dom'; //Going to use LINK instead of a href, to prevent refreshing the page!\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","// import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'; //importing the font-awesome X sign\r\n\r\nconst Task = ({task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n        className={`task ${task.reminder ? 'reminder' : ''}`} //if reminder is true, use reminder class\r\n        onDoubleClick={() => onToggle(task.id)}\r\n        >\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes \r\n                onClick={() => onDelete(task.id) } \r\n                style={{ color: 'red', cursor: 'pointer '}}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","// import React from 'react'\r\n/* \r\n    //Without useState HOOK\r\n    const tasks = [\r\n    {\r\n        id: 1,\r\n        text: 'Hahhaha',\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'okeiokei',\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Testing',\r\n    }\r\n] */\r\n// import { useState } from 'react';\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    //To use this array in state of this component //3. gonna set this array as global state in App.js instead!\r\n/*     const [tasks, setTasks] = useState([ //1. name of the array, 2. which fx updates them\r\n        {\r\n            id: 1,\r\n            text: 'Hahhaha',\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'okeiokei',\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Testing',\r\n        }\r\n    ]) */\r\n\r\n    return (\r\n        <>\r\n         {tasks.map((task) => (\r\n             <Task \r\n                key={task.id} \r\n                task={task} \r\n                onDelete={onDelete} \r\n                onToggle={onToggle}  \r\n            />\r\n         ))}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    /* State for the form, 1) state 2) method to update the state */\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault(); //So it doesn't submit to a page\r\n\r\n        if (!text) {\r\n            alert(\"Please add a task!\");\r\n            return;\r\n        }\r\n\r\n        onAdd({ text, day, reminder }); //Add the task\r\n\r\n        setText('') //Clear the input values & uncheck checkbox\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Add task' \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Add Day & Time'\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\"\r\n            className=\"btn btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'; //Going to use LINK instead of a href, to prevent refreshing the page!\r\n\r\nconst About = () => {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <h4>This page was created by: ristotoldsep</h4><br></br>\r\n            <p>Github: <a href=\"https://github.com/ristotoldsep\">ristotoldsep</a></p>\r\n            <br></br>\r\n            <Link to=\"/\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","\n//With function declaration we don't need to import react, with class we do! \n// import React from 'react'\nimport { useState, useEffect } from 'react'; //Added useEffect hook to have tasks displayed when opening the page\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\n\n/* class App extends React.Component {\n  render() {\n    return <h1>Hahahhaahh</h1>\n  }\n} */\n\nconst App = () => {\n  //State that controls the toggle\n  const [showAddTask, setShowAddTask] = useState(false);\n  \n  //TASKS STATE\n  //Defining tasks as global state here because we need them in several components\n  const [tasks, setTasks] = useState([ //1. name of the array, 2. which fx updates them\n    // Empty array! (objects were here, but now used json-server to mock back-end (db.json))\n  ])\n\n  /* MAKING THE HTTP REQUEST FOR DATA */\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer) //Set the tasks from db as initial STATE\n    }\n\n    getTasks();\n  }, []) //useEffect needs to have dependencies array\n\n  // Fetch data (tasks)\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  }\n  \n  // Fetch data (single task)\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    //Removed this and added json-server to add data to the back-end (id increments automatically there)\n    /* const id = Math.floor(Math.random() * 10000) + 1; //Created a random id for the task, since we are not using back-end\n    \n    const newTask = { id, ...task } //get the form data that was added from front-end\n    setTasks([...tasks, newTask]) //add it to the existing tasks object\n\n    console.log(id); */\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task) //Convert the JS object into JSON and post to api\n    })\n\n    const data = await res.json();  //get the form data that was added from front-end\n\n    setTasks([...tasks, data]) //add it to the existing tasks object\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id)) //removing the task with clicked id (setting tasks object to filtered tasks)\n  }\n\n  // Toggle the reminder with double click\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder } //getting the task and assigning it to a variable\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updTask) //Turn the response into JSON\n    })\n\n    const data = await res.json(); //data = updated \"task\"\n\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? \n        { ...task, reminder: data.reminder } : task)) //Take in the task object as it is, but change reminder to opposite\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n\n        {/* Header component - contains toggle button to show/hide the form */}\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} /> \n        \n        <Route \n          path='/' \n          exact \n          render={(props) => (\n            <>\n              {/* Form for adding the task */}\n              {showAddTask && <AddTask onAdd={addTask} />} {/* Shorter way for terniary operator */}\n\n              {/* Tasks components */}\n              {tasks.length > 0 ?\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                /> : (<p>No tasks!</p>)}\n            </>\n        )} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}